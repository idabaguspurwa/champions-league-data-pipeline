name: Deploy Airflow DAG

on:
  push:
    branches: [ main ]
    paths:
      - 'airflow_dags/**'
      - 'requirements.txt'
      - '.github/workflows/deploy_airflow_dag.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'airflow_dags/**'
      - 'requirements.txt'

env:
  AWS_REGION: ap-southeast-1
  MWAA_ENVIRONMENT_NAME: champions-league-airflow
  PYTHON_VERSION: '3.9'
  AIRFLOW_VERSION: '2.10.3'

# Set permissions for OIDC
permissions:
  id-token: write
  contents: read

jobs:
  ## -----------------------------------------------------------------
  ## 1. Validate DAGs (Runs on PRs and pushes to main)
  ## -----------------------------------------------------------------
  validate_dags:
    name: "Validate DAGs"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Set up Python ${{ env.PYTHON_VERSION }}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: "Cache Pip dependencies"
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.AIRFLOW_VERSION }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.AIRFLOW_VERSION }}-

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install "apache-airflow==${{ env.AIRFLOW_VERSION }}" pytest
          pip install -r requirements.txt

      - name: "Lint and Test DAGs with Pytest"
        run: |
          # The pytest command will automatically discover and run tests in the 'tests/' directory
          pytest tests/

  ## -----------------------------------------------------------------
  ## 2. Deploy to MWAA (Runs only on merge/push to main)
  ## -----------------------------------------------------------------
  deploy_to_mwaa:
    name: "üöÄ Deploy to MWAA"
    needs: validate_dags
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Configure AWS credentials via OIDC"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: "Get MWAA S3 Bucket"
        id: get_bucket
        run: |
          BUCKET_NAME=$(aws airflow get-environment --name ${{ env.MWAA_ENVIRONMENT_NAME }} --query 'Environment.SourceBucketArn' --output text | cut -d':' -f6)
          echo "MWAA S3 Bucket: $BUCKET_NAME"
          echo "bucket_name=$BUCKET_NAME" >> "$GITHUB_OUTPUT"

      - name: "Sync files to MWAA S3 Bucket"
        run: |
          # Use sync to handle all DAGs, new files, and deletions
          aws s3 sync airflow_dags/ s3://${{ steps.get_bucket.outputs.bucket_name }}/dags/ --delete
          
          # Sync requirements if it exists
          if [ -f "requirements.txt" ]; then
            aws s3 cp requirements.txt s3://${{ steps.get_bucket.outputs.bucket_name }}/requirements.txt
          fi

      - name: "Create Deployment Summary"
        run: |
          echo "### üöÄ MWAA Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "| Environment | DAGs Folder |" >> $GITHUB_STEP_SUMMARY
          echo "|-------------|-------------|" >> $GITHUB_STEP_SUMMARY
          echo "| \`${{ env.MWAA_ENVIRONMENT_NAME }}\` | \`s3://${{ steps.get_bucket.outputs.bucket_name }}/dags/\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # new line
          echo "**Git Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY

      - name: "Send Deployment Notification"
        if: always() # Run this step even if previous steps fail
        run: |
          if [[ "${{ job.status }}" == "success" ]]; then
            SUBJECT="‚úÖ Success: Airflow DAG Deployment"
            MESSAGE="Champions League DAGs deployed successfully to MWAA environment: ${{ env.MWAA_ENVIRONMENT_NAME }}. Commit: ${{ github.sha }}"
          else
            SUBJECT="‚ùå Failure: Airflow DAG Deployment"
            MESSAGE="Champions League DAG deployment failed. Check GitHub Actions logs for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          fi
          
          aws sns publish --topic-arn "${{ secrets.SNS_TOPIC_ARN }}" \
            --subject "$SUBJECT" \
            --message "$MESSAGE"