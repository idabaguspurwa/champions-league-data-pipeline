apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-ingestion-service
  namespace: champions-league
  labels:
    app: data-ingestion-service
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: data-ingestion-service
  template:
    metadata:
      labels:
        app: data-ingestion-service
        version: v1
    spec:
      containers:
      - name: data-ingestion
        image: champions-league/data-ingestion:latest
        ports:
        - containerPort: 8080
        env:
        - name: AWS_REGION
          value: "ap-southeast-1"
        - name: S3_BUCKET
          value: "champions-league-data-lake"
        - name: LOG_LEVEL
          value: "INFO"
        - name: API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: base_url
        - name: RAPIDAPI_HOST
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: rapidapi_host
        - name: RAPIDAPI_KEY
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: rapidapi_key
        - name: RATE_LIMIT
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: rate_limit
        - name: TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: timeout
        - name: RETRY_ATTEMPTS
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: retry_attempts
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: secrets-volume
          mountPath: /app/secrets
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: ingestion-config
      - name: secrets-volume
        secret:
          secretName: api-credentials
      serviceAccountName: data-ingestion-sa
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node-type"
        operator: "Equal"
        value: "worker"
        effect: "NoSchedule"
